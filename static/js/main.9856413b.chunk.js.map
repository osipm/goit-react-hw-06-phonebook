{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","v4","handleDeleteContact","filter","connect","state","contacts","phone","dispatch","onSubmit","Contact","useState","setName","setNumber","handleChange","e","target","value","className","s","form","preventDefault","find","contact","alert","label","type","pattern","title","onChange","required","btn","getFilteredContacts","text","toLowerCase","includes","handleDelete","console","log","contactsList","map","item","onClick","onHandleChange","App","createReducer","actions","contac","_","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phoneReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","stateLs","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9856413b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2gge_\",\"label\":\"ContactForm_label__oGQ7Q\",\"btn\":\"ContactForm_btn__oMX0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__2vedU\",\"item\":\"ContactList_item__2aNDp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__29lbm\"};","import { v4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('addContact', (name, number) => {\n  return { payload: { name, number, id: v4() } };\n});\nexport const handleDeleteContact = createAction('delete');\nexport const filter = createAction('filter');\n","import React, { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as Contact from '../../redux/actions';\n\nfunction ContactForm({ contacts, onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // setContacts(prevContacts => {\n  //     if (prevContacts.find(contact => contact.name === name)) {\n  //       alert(`${name} is already in the contacts`);\n  //       return prevContacts;\n  //     }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in the contacts`);\n      return contacts;\n    }\n    onSubmit(name, number);\n    reset();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона\"\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.phone.contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(Contact.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","// import { PropTypes } from 'prop-types';\nimport s from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport * as Contact from '../../redux/actions';\n\nconst ContactList = ({ contacts, handleDelete }) => {\n  console.log('list', contacts);\n  const contactsList = contacts.map(({ id, name, number }) => (\n    <li key={id} className={s.item}>\n      <div>\n        <span>\n          {name}: {number}\n        </span>\n        <button\n          className={s.btn}\n          id={id}\n          type=\"button\"\n          onClick={() => handleDelete(id)}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  ));\n\n  return <ul>{contactsList}</ul>;\n};\n\n// ContactList.propTypes = {\n//   contacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//     }).isRequired,\n//   ).isRequired,\n//   handleDelete: PropTypes.func.isRequired,\n// };\n\nconst getFilteredContacts = (contact, filter) => {\n  return contact.filter(text =>\n    text.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nconst mapStateToProps = ({ phone: { contacts, filter } }) => ({\n  contacts: getFilteredContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleDelete: id => dispatch(Contact.handleDeleteContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { PropTypes } from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport * as Contact from '../../redux/actions';\n\nfunction Filter({ filter, onHandleChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name:\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onHandleChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.phone.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onHandleChange: e => dispatch(Contact.filter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  // const addContact = (name, number) => {\n\n  //   setContacts(prevContacts => {\n  //     if (prevContacts.find(contact => contact.name === name)) {\n  //       alert(`${name} is already in the contacts`);\n  //       return prevContacts;\n  //     }\n\n  //\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.handleDeleteContact]: (state, { payload }) =>\n    state.filter(contac => contac.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.filter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import phoneReduser from './reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    phone: persistReducer(persistConfig, phoneReduser),\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nlet persistor = persistStore(store);\n\nconst stateLs = { store, persistor };\nexport default stateLs;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport stateLs from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={stateLs.store}>\n      <PersistGate loading={null} persistor={stateLs.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}